import Head from "next/head";
import localFont from "next/font/local";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export default function Home() {

  const [tasks, setTasks] = useState<string[]>([]); //Lista de tareas
  const [taskInput, setTaskInput] = useState(""); //Input donde se crean las tareas

  //Cargar Tareas
  useEffect(() => {
    const savedTasks = localStorage.getItem("tasks");
    if (savedTasks) {
      setTasks(JSON.parse(savedTasks));
    }
  }, []);

  //Guardar tasks en el LocalStoraj
  useEffect(() => {
    if (tasks.length > 0) {
      localStorage.setItem("tasks", JSON.stringify(tasks));
    }
    //y con esto termino de chambear en mi cumpleaÃ±os a la 01:03 a.m. xD
  }, [tasks]);

  const createTask = () => {
    if (taskInput.trim() === "") return;
    setTasks([...tasks, taskInput]);
    setTaskInput("");
  }
  return (

    <>
      <Head>
        <title>Tasks Organizer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link
          rel="icon"
          href="https://cdn-icons-png.flaticon.com/512/2098/2098402.png"
        />
      </Head>
      <div
        className={`${styles.page} ${geistSans.variable} ${geistMono.variable}`}
      >
        <main className={styles.main}>
          <h1>Lista de quehaceres</h1>

          <div className={styles.taskCreator}>
            <input
              type="text"
              placeholder="Tarea"
              className={styles.input}
              id="inputText"
              value={taskInput}
              onChange={(input) => setTaskInput(input.target.value)}
            />
            <button className={styles.createButton} id="CreateBtn" onClick={createTask}>Crear nuevo</button>
          </div>

          <div className={styles.taskList} id="TasksList">
            {tasks.map((task, index) => (
              <label key={index}>
                <input type="checkbox" />
                {task}
              </label>
            ))}
          </div>

          <div className={styles.actions}>
            <button className={styles.deleteButton} onClick={() => setTasks([])}>Eliminar todo</button>
            <button
              className={styles.deleteButton}
              //Filtra el array tasks para que seleccione las tasks que no estan checked, _ solo ignora el value de los checkboxes
              onClick={() => setTasks(
                tasks.filter((_, undone_id) => !(document.querySelectorAll('input[type="checkbox"]')[undone_id] as HTMLInputElement).checked))}
            >Eliminar completados</button>
          </div>
        </main>
      </div>
    </>
  );
}